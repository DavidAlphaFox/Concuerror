{erl_opts,
 [ debug_info
 , warn_export_vars
 , warn_unused_import
 , warn_missing_spec
 , warn_untyped_record
 ]}.

{deps, [{getopt, "1.0.1"}]}.

{escript_incl_apps, [concuerror, getopt]}.
{escript_main_app, concuerror}.
{escript_name, concuerror}.
{escript_emu_args, "%%! +S1 -boot start_clean -noshell -pa . -pa ebin\n"}.

{pre_hooks,
 [ {compile, "priv/generate_version_hrl 20 > src/concuerror_otp_version.hrl"}
 ]}.

{post_hooks,
 [ {escriptize, "cp \"$REBAR_BUILD_DIR/bin/concuerror\" ./bin"}
 , {eunit, "cp \"$REBAR_BUILD_DIR/cover/eunit.coverdata\" ./cover"}
 ]}.

{profiles,
 [ {dev,
    [ {erl_opts, [{d, 'DEV', "true"}]}
    ]}
 , {native,
    [ {erl_opts, [native]}
    ]}
 , {pedantic,
    [ {erl_opts, [warnings_as_errors]}
    ]}
 , {test,
    [ {erl_opts, [export_all, nowarn_missing_spec]}
    ]}
 , {lint,
    [ {plugins,
       [ {rebar3_lint, {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "v0.1.10"}}}
       ]}
    ]}
 ]}.

{dialyzer,
 [ {warnings,
    [ unmatched_returns
    , underspecs
    ]}
 , {base_plt_apps,
    [ compiler
    , crypto
    , erts
    , getopt
    , kernel
    , stdlib
    , tools
    ]}
 ]}.

{cover_enabled, true}.
{cover_export_enabled, true}.

{elvis,
 [ #{ dirs => ["src"]
    , filter => "*.erl"
    , rules =>
        [ {elvis_style, module_naming_convention,
           #{ regex => "^concuerror(_[a-z]+)*$"
            , ignore => []
            }}
        , {elvis_style, no_tabs}
        , {elvis_style, no_trailing_whitespace}
        , {elvis_style, macro_module_names}
        , {elvis_style, operator_spaces,
           #{ rules =>
                [ {right, "++"}
                , {left, "++"}
                , {right, "->"}
                , {left, "->"}
                , {right, "!"}
                , {left, "!"}
                ]}}
        %% , {elvis_style, nesting_level, #{level => 3}}
        , {elvis_style, god_modules,
           #{ limit => 20
            , ignore => []
            }}
        , {elvis_style, no_if_expression}
        , {elvis_style, function_naming_convention,
           #{ regex => "^[a-z]{2}([a-z0-9]*_?)*$"}}
        , {elvis_style, state_record_and_type}
        , {elvis_style, no_spec_with_records}
        , {elvis_style, dont_repeat_yourself, #{min_complexity => 13}}
        , {elvis_style, used_ignored_variable}
        , {elvis_style, no_debug_call, #{ignore => []}}
        ]
    }
 , #{ dirs => ["src"]
    , filter => "*.erl"
    , rules =>
        [ {elvis_style, operator_spaces,
           #{ rules =>
                [ {right, ","}
                ]
            }}
        , {elvis_style, line_length,
           #{ limit => 80
            , skip_comments => false
            }}
        ]
    , ignore =>
        [ concuerror_callback
        , concuerror_dependencies
        , concuerror_options
        , concuerror_scheduler
        ]
    }
 , #{ dirs => ["."]
    , filter => "rebar.config"
    , rules =>
        [ {elvis_project, no_deps_master_rebar, #{ignore => []}}
        , {elvis_project, protocol_for_deps_rebar, #{ignore => []}}
        ]
    }
 ]
}.
