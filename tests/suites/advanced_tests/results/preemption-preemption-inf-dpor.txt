################################################################################
Concuerror started with options:
  [{after_timeout,infinity},
   {assume_racing,false},
   {delay_bound,infinity},
   {depth_bound,5000},
   {entry_point,{preemption,preemption,[]}},
   {files,["/home/stavros/git/Concuerror/tests/suites/advanced_tests/src/preemption.erl"]},
   {ignore_error,[]},
   {ignore_first_crash,true},
   {instant_delivery,false},
   {non_racing_system,[]},
   {optimal,true},
   {print_depth,20},
   {quiet,true},
   {scheduling,oldest},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,infinity},
   {treat_as_normal,[]}]
################################################################################
Erroneous interleaving 1:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: Message ({sender,P.3}) from P.3 reaches P
  12: P: receives message ({sender,P.3})
    in preemption.erl line 50
  13: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  14: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  15: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  16: P.4: exits normally
  17: Message (1) from P.4 reaches P.1
  18: Message (1) from P.4 reaches P.2
  19: Message ({sender,P.4}) from P.4 reaches P
  20: P: receives message ({sender,P.4})
    in preemption.erl line 50
  21: P: go = P.1 ! go
    in preemption.erl line 56
  22: P: go = P.2 ! go
    in preemption.erl line 56
  23: Message (go) from P reaches P.1
  24: Message (go) from P reaches P.2
  25: P.1: receives message (go)
    in preemption.erl line 29
  26: P.1: receives message (0)
    in preemption.erl line 36
  27: P.1: receives message (1)
    in preemption.erl line 36
  28: P.1: exits normally
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (0)
    in preemption.erl line 36
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: Message ({sender,P.3}) from P.3 reaches P
  12: P: receives message ({sender,P.3})
    in preemption.erl line 50
  13: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  14: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  15: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  16: P.4: exits normally
  17: Message (1) from P.4 reaches P.1
  18: Message ({sender,P.4}) from P.4 reaches P
  19: P: receives message ({sender,P.4})
    in preemption.erl line 50
  20: P: go = P.1 ! go
    in preemption.erl line 56
  21: P: go = P.2 ! go
    in preemption.erl line 56
  22: Message (go) from P reaches P.1
  23: P.1: receives message (go)
    in preemption.erl line 29
  24: P.1: receives message (0)
    in preemption.erl line 36
  25: P.1: receives message (1)
    in preemption.erl line 36
  26: P.1: exits normally
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: Message ({sender,P.3}) from P.3 reaches P
  12: P: receives message ({sender,P.3})
    in preemption.erl line 50
  13: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  14: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  15: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  16: P.4: exits normally
  17: Message (1) from P.4 reaches P.2
  18: Message ({sender,P.4}) from P.4 reaches P
  19: P: receives message ({sender,P.4})
    in preemption.erl line 50
  20: P: go = P.1 ! go
    in preemption.erl line 56
  21: P: go = P.2 ! go
    in preemption.erl line 56
  22: Message (go) from P reaches P.2
  23: P.2: receives message (go)
    in preemption.erl line 29
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: receives message (1)
    in preemption.erl line 36
  26: P.2: exits normally
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: Message ({sender,P.3}) from P.3 reaches P
  12: P: receives message ({sender,P.3})
    in preemption.erl line 50
  13: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  14: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  15: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  16: P.4: exits normally
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: Message (1) from P.4 reaches P.2
  25: P.2: receives message (1)
    in preemption.erl line 36
  26: P.2: exits normally
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message (1) from P.4 reaches P.1
  16: Message (1) from P.4 reaches P.2
  17: Message ({sender,P.4}) from P.4 reaches P
  18: Message ({sender,P.3}) from P.3 reaches P
  19: P: receives message ({sender,P.3})
    in preemption.erl line 50
  20: P: receives message ({sender,P.4})
    in preemption.erl line 50
  21: P: go = P.1 ! go
    in preemption.erl line 56
  22: P: go = P.2 ! go
    in preemption.erl line 56
  23: Message (go) from P reaches P.1
  24: Message (go) from P reaches P.2
  25: P.1: receives message (go)
    in preemption.erl line 29
  26: P.1: receives message (0)
    in preemption.erl line 36
  27: P.1: receives message (1)
    in preemption.erl line 36
  28: P.1: exits normally
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (0)
    in preemption.erl line 36
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 6:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message (1) from P.4 reaches P.1
  16: Message ({sender,P.4}) from P.4 reaches P
  17: Message ({sender,P.3}) from P.3 reaches P
  18: P: receives message ({sender,P.3})
    in preemption.erl line 50
  19: P: receives message ({sender,P.4})
    in preemption.erl line 50
  20: P: go = P.1 ! go
    in preemption.erl line 56
  21: P: go = P.2 ! go
    in preemption.erl line 56
  22: Message (go) from P reaches P.1
  23: P.1: receives message (go)
    in preemption.erl line 29
  24: P.1: receives message (0)
    in preemption.erl line 36
  25: P.1: receives message (1)
    in preemption.erl line 36
  26: P.1: exits normally
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 7:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message (1) from P.4 reaches P.2
  16: Message ({sender,P.4}) from P.4 reaches P
  17: Message ({sender,P.3}) from P.3 reaches P
  18: P: receives message ({sender,P.3})
    in preemption.erl line 50
  19: P: receives message ({sender,P.4})
    in preemption.erl line 50
  20: P: go = P.1 ! go
    in preemption.erl line 56
  21: P: go = P.2 ! go
    in preemption.erl line 56
  22: Message (go) from P reaches P.2
  23: P.2: receives message (go)
    in preemption.erl line 29
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: receives message (1)
    in preemption.erl line 36
  26: P.2: exits normally
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 8:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message (0) from P.3 reaches P.2
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: Message (1) from P.4 reaches P.2
  25: P.2: receives message (1)
    in preemption.erl line 36
  26: P.2: exits normally
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 9:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.1
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 10:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.1
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (0) from P.3 reaches P.2
  28: Message (go) from P reaches P.2
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (1)
    in preemption.erl line 36
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 11:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.1
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.2
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 12:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.1
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.2
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 13:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 14:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (0) from P.3 reaches P.2
  28: Message (go) from P reaches P.2
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (1)
    in preemption.erl line 36
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 15:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.2
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 16:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.2
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 17:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.1
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 18:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.1
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (0) from P.3 reaches P.2
  28: Message (go) from P reaches P.2
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (1)
    in preemption.erl line 36
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 19:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.1
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.2
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 20:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.1
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.1
  22: P.1: receives message (go)
    in preemption.erl line 29
  23: P.1: receives message (0)
    in preemption.erl line 36
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.2
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 21:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (go) from P reaches P.2
  28: P.2: receives message (go)
    in preemption.erl line 29
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 22:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (1) from P.4 reaches P.2
  27: Message (0) from P.3 reaches P.2
  28: Message (go) from P reaches P.2
  29: P.2: receives message (go)
    in preemption.erl line 29
  30: P.2: receives message (1)
    in preemption.erl line 36
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 23:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.2
  29: P.2: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.2
  31: P.2: receives message (1)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 24:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.1
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.1
  21: P.1: receives message (go)
    in preemption.erl line 29
  22: P.1: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.1
  24: P.1: receives message (1)
    in preemption.erl line 36
  25: P.1: exits normally
  26: Message (go) from P reaches P.2
  27: P.2: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.2
  29: P.2: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.2
  31: P.2: receives message (0)
    in preemption.erl line 36
  32: P.2: exits normally
################################################################################
Erroneous interleaving 25:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.2
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 26:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.2
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 27:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.2
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 28:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message (1) from P.4 reaches P.2
  17: Message ({sender,P.4}) from P.4 reaches P
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 29:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 30:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 31:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 32:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: Message ({sender,P.3}) from P.3 reaches P
  11: P: receives message ({sender,P.3})
    in preemption.erl line 50
  12: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  13: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  14: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  15: P.4: exits normally
  16: Message ({sender,P.4}) from P.4 reaches P
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 33:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.2
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 34:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.2
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 35:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.2
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 36:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message (1) from P.4 reaches P.2
  15: Message ({sender,P.4}) from P.4 reaches P
  16: Message ({sender,P.3}) from P.3 reaches P
  17: P: receives message ({sender,P.3})
    in preemption.erl line 50
  18: P: receives message ({sender,P.4})
    in preemption.erl line 50
  19: P: go = P.1 ! go
    in preemption.erl line 56
  20: P: go = P.2 ! go
    in preemption.erl line 56
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (0)
    in preemption.erl line 36
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 37:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 38:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 39:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 40:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message (0) from P.3 reaches P.2
  10: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  11: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  12: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  13: P.4: exits normally
  14: Message ({sender,P.4}) from P.4 reaches P
  15: Message ({sender,P.3}) from P.3 reaches P
  16: P: receives message ({sender,P.3})
    in preemption.erl line 50
  17: P: receives message ({sender,P.4})
    in preemption.erl line 50
  18: P: go = P.1 ! go
    in preemption.erl line 56
  19: P: go = P.2 ! go
    in preemption.erl line 56
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 41:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 42:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 43:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 44:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 45:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 46:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 47:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 48:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 49:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 50:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 51:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 52:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 53:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 54:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 55:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 56:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: Message ({sender,P.3}) from P.3 reaches P
  10: P: receives message ({sender,P.3})
    in preemption.erl line 50
  11: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  12: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  13: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  14: P.4: exits normally
  15: Message ({sender,P.4}) from P.4 reaches P
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 57:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 58:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 59:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 60:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (go) from P reaches P.2
  21: P.2: receives message (go)
    in preemption.erl line 29
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 61:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 62:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 63:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 64:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (1) from P.4 reaches P.2
  20: Message (0) from P.3 reaches P.2
  21: Message (go) from P reaches P.2
  22: P.2: receives message (go)
    in preemption.erl line 29
  23: P.2: receives message (1)
    in preemption.erl line 36
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 65:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 66:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 67:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 68:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (0) from P.3 reaches P.2
  22: P.2: receives message (0)
    in preemption.erl line 36
  23: Message (1) from P.4 reaches P.2
  24: P.2: receives message (1)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 69:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (go) from P reaches P.1
  28: P.1: receives message (go)
    in preemption.erl line 29
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 70:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (1) from P.4 reaches P.1
  27: Message (0) from P.3 reaches P.1
  28: Message (go) from P reaches P.1
  29: P.1: receives message (go)
    in preemption.erl line 29
  30: P.1: receives message (1)
    in preemption.erl line 36
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 71:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (0) from P.3 reaches P.1
  29: P.1: receives message (0)
    in preemption.erl line 36
  30: Message (1) from P.4 reaches P.1
  31: P.1: receives message (1)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Erroneous interleaving 72:
* Blocked at a 'receive' (when all other processes have exited):
    P in preemption.erl line 21
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<preemption.5.101248340>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<preemption.4.101248340>,[]])
    in erlang.erl line 2329
   5: P.3: 0 = P.1 ! 0
    in preemption.erl line 45
   6: P.3: 0 = P.2 ! 0
    in preemption.erl line 45
   7: P.3: {sender,P.3} = P ! {sender,P.3}
    in preemption.erl line 46
   8: P.3: exits normally
   9: P.4: 1 = P.1 ! 1
    in preemption.erl line 45
  10: P.4: 1 = P.2 ! 1
    in preemption.erl line 45
  11: P.4: {sender,P.4} = P ! {sender,P.4}
    in preemption.erl line 46
  12: P.4: exits normally
  13: Message ({sender,P.4}) from P.4 reaches P
  14: Message ({sender,P.3}) from P.3 reaches P
  15: P: receives message ({sender,P.3})
    in preemption.erl line 50
  16: P: receives message ({sender,P.4})
    in preemption.erl line 50
  17: P: go = P.1 ! go
    in preemption.erl line 56
  18: P: go = P.2 ! go
    in preemption.erl line 56
  19: Message (go) from P reaches P.2
  20: P.2: receives message (go)
    in preemption.erl line 29
  21: Message (1) from P.4 reaches P.2
  22: P.2: receives message (1)
    in preemption.erl line 36
  23: Message (0) from P.3 reaches P.2
  24: P.2: receives message (0)
    in preemption.erl line 36
  25: P.2: exits normally
  26: Message (go) from P reaches P.1
  27: P.1: receives message (go)
    in preemption.erl line 29
  28: Message (1) from P.4 reaches P.1
  29: P.1: receives message (1)
    in preemption.erl line 36
  30: Message (0) from P.3 reaches P.1
  31: P.1: receives message (0)
    in preemption.erl line 36
  32: P.1: exits normally
################################################################################
Concuerror Info:
--------------------------------------------------------------------------------
Instrumented: preemption
Instrumented: io_lib
Instrumented: gen_server
Hijacked application_controller
Instrumented: lists
Instrumented: erlang
################################################################################
Done! (Exit status: completed)
  Summary: 72 errors, 72/72 interleavings explored
