################################################################################
Concuerror started with options:
  [{'after-timeout',infinite},
   {assume_racing,false},
   {files,["/home/stavros/git/Concuerror/tests/suites/advanced_tests/src/ring_leader_election_barrier.erl"]},
   {normal_exit,[normal]},
   {symbolic,true},
   {target,{ring_leader_election_barrier,ring_leader_election_barrier,[]}},
   {verbose,0},
   {wait,2000}]
################################################################################
Erroneous interleaving 1:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 6:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  19: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 7:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 8:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 9:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 10:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 11:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 12:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  14: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  15: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.2 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 13:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 14:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 15:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 16:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 17:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 18:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 19:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 20:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 21:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 22:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 23:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 24:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 25:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 26:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 27:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 28:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 29:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 30:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: Message (ok) from P.1 reaches P
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 31:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: Message (3) from P.1 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P.1: exits normally
  65: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  66: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P.3: exits normally
################################################################################
Erroneous interleaving 32:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: Message (3) from P.2 reaches P
  55: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  56: P.2: exits normally
  57: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  59: Message (1) from P.3 reaches P.1
  60: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  61: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  62: P.1: exits normally
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 33:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 34:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 35:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 36:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: Message ({l,P.2}) from P reaches P.1
   6: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   7: Message ({l,P.3}) from P reaches P.2
   8: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: Message (ok) from P.1 reaches P
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: Message (go) from P reaches P.1
  24: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: Message (2) from P.2 reaches P.3
  34: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  35: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: Message (3) from P.3 reaches P.1
  40: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  41: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  42: Message (3) from P.1 reaches P.2
  43: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  44: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: Message (2) from P.3 reaches P.1
  49: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  50: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  51: Message (2) from P.1 reaches P.2
  52: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  53: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  54: P.2: exits normally
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: Message (1) from P.3 reaches P.1
  58: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  59: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.1: exits normally
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: Message (3) from P.1 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Done! (Exit status: completed)
  Summary: 36 errors, 36/36 interleavings explored
