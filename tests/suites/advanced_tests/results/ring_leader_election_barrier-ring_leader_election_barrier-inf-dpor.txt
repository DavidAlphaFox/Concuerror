################################################################################
Concuerror started with options:
  [{after_timeout,infinity},
   {assume_racing,false},
   {delay_bound,infinity},
   {depth_bound,5000},
   {entry_point,
       {ring_leader_election_barrier,ring_leader_election_barrier,[]}},
   {files,
       ["/home/stavros/git/Concuerror/tests/suites/advanced_tests/src/ring_leader_election_barrier.erl"]},
   {ignore_error,[]},
   {ignore_first_crash,true},
   {instant_delivery,false},
   {non_racing_system,[]},
   {optimal,true},
   {print_depth,20},
   {quiet,true},
   {scheduling,round_robin},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,infinity},
   {treat_as_normal,[]}]
################################################################################
Erroneous interleaving 1:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 6:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 7:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 8:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 9:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 10:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 11:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 12:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 13:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 14:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 15:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 16:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 17:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 18:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 19:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 20:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 21:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 22:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 23:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 24:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 25:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 26:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 27:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 28:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 29:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 30:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 31:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 32:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 33:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 34:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 35:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 36:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 37:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 38:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 39:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 40:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 41:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 42:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 43:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 44:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 45:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 46:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 47:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 48:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 49:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 50:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 51:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 52:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 53:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 54:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 55:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 56:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 57:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 58:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 59:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 60:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 61:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 62:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 63:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 64:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 65:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 66:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 67:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 68:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 69:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 70:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 71:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 72:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 73:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 74:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 75:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 76:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 77:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 78:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: Message (ok) from P.2 reaches P
  16: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  17: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 79:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 80:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 81:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 82:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 83:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 84:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 85:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 86:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 87:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 88:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 89:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 90:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 91:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 92:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 93:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 94:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 95:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 96:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 97:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 98:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 99:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 100:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 101:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 102:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 103:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 104:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 105:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 106:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 107:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 108:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 109:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 110:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 111:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 112:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 113:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 114:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 115:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 116:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 117:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 118:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 119:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 120:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 121:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 122:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 123:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 124:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 125:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 126:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 127:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 128:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 129:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 130:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 131:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 132:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 133:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 134:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 135:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 136:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 137:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 138:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 139:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 140:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 141:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 142:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 143:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 144:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 145:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 146:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 147:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 148:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 149:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 150:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 151:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 152:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 153:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 154:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 155:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 156:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: Message (ok) from P.1 reaches P
  13: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  14: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  15: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  16: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.3 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 157:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 158:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 159:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 160:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 161:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 162:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 163:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 164:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 165:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 166:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 167:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 168:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 169:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 170:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 171:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 172:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 173:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 174:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 175:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 176:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 177:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 178:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 179:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 180:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 181:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 182:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 183:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 184:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 185:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 186:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 187:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 188:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 189:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 190:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 191:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 192:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 193:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 194:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 195:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 196:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 197:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 198:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 199:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 200:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 201:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 202:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 203:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 204:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 205:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 206:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 207:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 208:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 209:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 210:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 211:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 212:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 213:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 214:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 215:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 216:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 217:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 218:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 219:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 220:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 221:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 222:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 223:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 224:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 225:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 226:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 227:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 228:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 229:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 230:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 231:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 232:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 233:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 234:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: Message (ok) from P.3 reaches P
  18: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 235:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 236:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 237:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 238:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 239:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 240:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 241:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 242:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 243:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 244:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 245:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 246:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 247:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 248:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 249:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 250:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 251:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 252:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 253:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 254:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 255:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 256:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 257:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 258:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 259:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 260:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 261:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 262:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 263:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 264:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 265:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 266:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 267:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 268:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 269:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 270:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 271:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 272:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 273:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 274:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 275:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 276:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 277:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 278:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 279:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 280:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 281:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 282:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 283:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 284:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 285:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 286:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 287:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 288:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 289:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 290:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 291:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 292:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 293:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 294:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 295:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 296:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 297:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 298:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 299:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 300:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 301:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 302:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 303:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 304:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 305:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 306:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 307:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 308:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 309:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 310:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 311:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 312:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.2 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.3 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 313:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 314:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 315:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 316:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 317:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 318:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 319:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 320:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 321:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 322:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 323:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 324:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 325:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 326:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 327:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 328:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 329:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 330:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 331:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 332:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 333:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 334:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 335:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 336:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 337:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 338:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 339:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 340:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 341:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 342:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 343:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 344:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 345:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 346:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 347:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 348:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 349:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 350:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 351:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 352:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 353:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 354:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 355:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 356:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 357:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 358:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 359:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 360:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 361:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 362:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 363:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 364:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 365:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 366:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 367:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 368:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 369:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 370:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 371:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 372:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 373:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 374:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 375:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 376:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 377:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 378:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 379:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 380:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 381:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 382:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 383:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 384:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 385:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 386:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 387:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 388:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 389:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 390:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.1 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.2 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 391:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 392:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 393:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 394:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 395:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 396:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: Message (go) from P reaches P.3
  28: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  29: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  30: Message (1) from P.1 reaches P.2
  31: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  32: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  33: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  34: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  35: Message (2) from P.2 reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 397:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 398:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 399:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 400:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 401:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 402:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 403:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 404:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 405:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 406:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 407:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 408:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.2
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: Message (1) from P.1 reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 409:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 410:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 411:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 412:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 413:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 414:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 415:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 416:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 417:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 418:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 419:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 420:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: Message (go) from P reaches P.3
  27: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  29: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  30: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  31: Message (3) from P.3 reaches P.1
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 421:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 422:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 423:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 424:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 425:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 426:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (1) from P.2 reaches P.3
  36: Message (go) from P reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 427:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: Message (3) from P.2 reaches P
  63: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  64: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.3: exits normally
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 428:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: Message (3) from P.1 reaches P
  56: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  57: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  58: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  59: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.2: exits normally
  61: Message (3) from P.2 reaches P.3
  62: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  63: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  64: P.3: exits normally
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 429:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 430:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 431:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 432:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.1
  26: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  28: Message (1) from P.1 reaches P.2
  29: Message (go) from P reaches P.2
  30: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  32: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  33: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  34: Message (2) from P.2 reaches P.3
  35: Message (go) from P reaches P.3
  36: Message (1) from P.2 reaches P.3
  37: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  39: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  40: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  41: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  42: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  43: Message (3) from P.3 reaches P.1
  44: Message (2) from P.3 reaches P.1
  45: Message (1) from P.3 reaches P.1
  46: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  47: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  48: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  49: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  50: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  51: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.1: exits normally
  53: Message (3) from P.1 reaches P.2
  54: Message (2) from P.1 reaches P.2
  55: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  56: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  57: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.2: exits normally
  60: Message (3) from P.2 reaches P.3
  61: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  62: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.3: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 433:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 434:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 435:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 436:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 437:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 438:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 439:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 440:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 441:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 442:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 443:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 444:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: Message (go) from P reaches P.3
  27: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  28: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  29: Message (2) from P.2 reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 445:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 446:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 447:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 448:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 449:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 450:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (2) from P.3 reaches P.1
  36: Message (go) from P reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 451:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: Message (3) from P.3 reaches P
  63: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  64: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  65: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  66: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  67: P.1: exits normally
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 452:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: Message (3) from P.2 reaches P
  56: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  57: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  58: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  59: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  60: P.3: exits normally
  61: Message (1) from P.3 reaches P.1
  62: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  63: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  64: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.1: exits normally
  66: Message (3) from P.1 reaches P
  67: Message (3) from P.3 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 453:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: Message (3) from P.1 reaches P
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 454:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.3 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 455:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 456:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.2
  26: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  28: Message (2) from P.2 reaches P.3
  29: Message (go) from P reaches P.3
  30: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  32: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  33: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  34: Message (3) from P.3 reaches P.1
  35: Message (go) from P reaches P.1
  36: Message (2) from P.3 reaches P.1
  37: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  39: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  40: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  41: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  42: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  43: Message (1) from P.1 reaches P.2
  44: Message (3) from P.1 reaches P.2
  45: Message (2) from P.1 reaches P.2
  46: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  47: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  48: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  49: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  50: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  51: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.2: exits normally
  53: Message (1) from P.2 reaches P.3
  54: Message (3) from P.2 reaches P.3
  55: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  56: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  57: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  58: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.3: exits normally
  60: Message (1) from P.3 reaches P.1
  61: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  62: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.1: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 457:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 458:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 459:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 460:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 461:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 462:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (3) from P.1 reaches P.2
  36: Message (go) from P reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 463:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: Message (3) from P.1 reaches P
  64: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  65: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  66: P.2: exits normally
  67: Message (3) from P.2 reaches P
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 464:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: Message (3) from P.3 reaches P
  56: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  57: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  59: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  60: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  61: P.1: exits normally
  62: Message (2) from P.1 reaches P.2
  63: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  64: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  65: P.2: exits normally
  66: Message (3) from P.2 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 465:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: Message (3) from P.2 reaches P
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 466:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.1 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.3 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.2 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 467:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: Message (3) from P.3 reaches P
  66: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.1 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Erroneous interleaving 468:
* Blocked at a 'receive' (when all other processes have exited):
    P in ring_leader_election_barrier.erl line 30
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_barrier.7.88316763>,[]])
    in erlang.erl line 2329
   4: P: {l,P.2} = P.1 ! {l,P.2}
    in ring_leader_election_barrier.erl line 22
   5: P: {l,P.3} = P.2 ! {l,P.3}
    in ring_leader_election_barrier.erl line 22
   6: P: {l,P.1} = P.3 ! {l,P.1}
    in ring_leader_election_barrier.erl line 19
   7: Message ({l,P.2}) from P reaches P.1
   8: Message ({l,P.3}) from P reaches P.2
   9: Message ({l,P.1}) from P reaches P.3
  10: P.1: receives message ({l,P.2})
    in ring_leader_election_barrier.erl line 35
  11: P.1: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  12: P.2: receives message ({l,P.3})
    in ring_leader_election_barrier.erl line 35
  13: P.2: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  14: P.3: receives message ({l,P.1})
    in ring_leader_election_barrier.erl line 35
  15: P.3: ok = P ! ok
    in ring_leader_election_barrier.erl line 37
  16: Message (ok) from P.3 reaches P
  17: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  18: Message (ok) from P.2 reaches P
  19: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  20: Message (ok) from P.1 reaches P
  21: P: receives message (ok)
    in ring_leader_election_barrier.erl line 27
  22: P: go = P.1 ! go
    in ring_leader_election_barrier.erl line 28
  23: P: go = P.2 ! go
    in ring_leader_election_barrier.erl line 28
  24: P: go = P.3 ! go
    in ring_leader_election_barrier.erl line 28
  25: Message (go) from P reaches P.3
  26: P.3: receives message (go)
    in ring_leader_election_barrier.erl line 38
  27: P.3: 3 = P.1 ! 3
    in ring_leader_election_barrier.erl line 41
  28: Message (3) from P.3 reaches P.1
  29: Message (go) from P reaches P.1
  30: P.1: receives message (go)
    in ring_leader_election_barrier.erl line 38
  31: P.1: 1 = P.2 ! 1
    in ring_leader_election_barrier.erl line 41
  32: P.1: receives message (3)
    in ring_leader_election_barrier.erl line 46
  33: P.1: 3 = P.2 ! 3
    in ring_leader_election_barrier.erl line 49
  34: Message (1) from P.1 reaches P.2
  35: Message (go) from P reaches P.2
  36: Message (3) from P.1 reaches P.2
  37: P.2: receives message (go)
    in ring_leader_election_barrier.erl line 38
  38: P.2: 2 = P.3 ! 2
    in ring_leader_election_barrier.erl line 41
  39: P.2: receives message (1)
    in ring_leader_election_barrier.erl line 46
  40: P.2: 1 = P.3 ! 1
    in ring_leader_election_barrier.erl line 49
  41: P.2: receives message (3)
    in ring_leader_election_barrier.erl line 46
  42: P.2: 3 = P.3 ! 3
    in ring_leader_election_barrier.erl line 49
  43: Message (2) from P.2 reaches P.3
  44: Message (1) from P.2 reaches P.3
  45: Message (3) from P.2 reaches P.3
  46: P.3: receives message (2)
    in ring_leader_election_barrier.erl line 46
  47: P.3: 2 = P.1 ! 2
    in ring_leader_election_barrier.erl line 49
  48: P.3: receives message (1)
    in ring_leader_election_barrier.erl line 46
  49: P.3: 1 = P.1 ! 1
    in ring_leader_election_barrier.erl line 49
  50: P.3: receives message (3)
    in ring_leader_election_barrier.erl line 46
  51: P.3: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  52: P.3: exits normally
  53: Message (2) from P.3 reaches P.1
  54: Message (1) from P.3 reaches P.1
  55: P.1: receives message (2)
    in ring_leader_election_barrier.erl line 46
  56: P.1: 2 = P.2 ! 2
    in ring_leader_election_barrier.erl line 49
  57: P.1: receives message (1)
    in ring_leader_election_barrier.erl line 46
  58: P.1: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  59: P.1: exits normally
  60: Message (2) from P.1 reaches P.2
  61: P.2: receives message (2)
    in ring_leader_election_barrier.erl line 46
  62: P.2: 3 = P ! 3
    in ring_leader_election_barrier.erl line 47
  63: P.2: exits normally
  64: Message (3) from P.2 reaches P
  65: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  66: Message (3) from P.1 reaches P
  67: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
  68: Message (3) from P.3 reaches P
  69: P: receives message (3)
    in ring_leader_election_barrier.erl line 29
################################################################################
Concuerror Info:
--------------------------------------------------------------------------------
Instrumented: ring_leader_election_barrier
Instrumented: io_lib
Instrumented: gen_server
Hijacked application_controller
Instrumented: lists
Instrumented: erlang
################################################################################
Done! (Exit status: completed)
  Summary: 468 errors, 468/468 interleavings explored
