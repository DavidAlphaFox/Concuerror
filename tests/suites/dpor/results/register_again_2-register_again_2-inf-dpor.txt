################################################################################
Concuerror started with options:
  [{target,{register_again_2,register_again_2,[]}},
   {symbolic,true},
   {verbose,0},
   {timeout,1000},
   {files,["/home/stavros/git/Concuerror/testsuite/suites/dpor/src/register_again_2.erl"]},
   {'after-timeout',infinite},
   {bound,2},
   {distributed,true},
   {'light-dpor',false}]
################################################################################
Erroneous interleaving 1:
* At step 15 process P.3 exited abnormally
    Reason:
      {badarg,
          [{erlang,unregister,
               [bank],
               [20,
                {file,
                    "/home/stavros/git/Concuerror/testsuite/suites/dpor/src/register_again_2.erl"}]},
           {register_again_2,'-register_again_2/0-fun-2-',1,
               [{file,
                    "/home/stavros/git/Concuerror/testsuite/suites/dpor/src/register_again_2.erl"},
                {line,20}]}]}
    Stacktrace:
      [{erlang,unregister,
               [bank],
               [20,
                {file,"/home/stavros/git/Concuerror/testsuite/suites/dpor/src/register_again_2.erl"}]},
       {register_again_2,'-register_again_2/0-fun-2-',1,
                         [{file,"/home/stavros/git/Concuerror/testsuite/suites/dpor/src/register_again_2.erl"},
                          {line,20}]}]
--------------------------------------------------------------------------------
Interleaving info:
   1: P: true = erlang:register(bank, P)
    in register_again_2.erl line 10
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<register_again_2.0.66250279>,[]])
    in erlang.erl line 2188
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<register_again_2.1.66250279>,[]])
    in erlang.erl line 2188
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<register_again_2.2.66250279>,[]])
    in erlang.erl line 2188
   5: P.1: money = bank ! money
    in register_again_2.erl line 11
   6: Message (money) from P.1 reaches P
   7: P: receives message (money)
    in register_again_2.erl line 28
   8: P: bank_got_money = P.2 ! bank_got_money
    in register_again_2.erl line 29
   9: Message (bank_got_money) from P reaches P.2
  10: P: exits normally
  11: P.1: exits normally
  12: P.2: receives message (bank_got_money)
    in register_again_2.erl line 14
  13: P.2: exits normally
  14: P.3: Exception raised by: erlang:unregister(bank)
    in register_again_2.erl line 20
  15: P.3: exits abnormally
################################################################################
Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P in register_again_2.erl line 28
    P.2 in register_again_2.erl line 14
--------------------------------------------------------------------------------
Interleaving info:
   1: P: true = erlang:register(bank, P)
    in register_again_2.erl line 10
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<register_again_2.0.66250279>,[]])
    in erlang.erl line 2188
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<register_again_2.1.66250279>,[]])
    in erlang.erl line 2188
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<register_again_2.2.66250279>,[]])
    in erlang.erl line 2188
   5: P.3: true = erlang:unregister(bank)
    in register_again_2.erl line 20
   6: P.1: Exception raised by: bank ! money
    in register_again_2.erl line 11
   7: P.1: exits normally
   8: P.3: true = erlang:register(bank, P.3)
    in register_again_2.erl line 21
   9: P.3: receive timeout expired after 0 ms
    in register_again_2.erl line 22
  10: P.3: exits normally
################################################################################
Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P in register_again_2.erl line 28
--------------------------------------------------------------------------------
Interleaving info:
   1: P: true = erlang:register(bank, P)
    in register_again_2.erl line 10
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<register_again_2.0.66250279>,[]])
    in erlang.erl line 2188
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<register_again_2.1.66250279>,[]])
    in erlang.erl line 2188
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<register_again_2.2.66250279>,[]])
    in erlang.erl line 2188
   5: P.3: true = erlang:unregister(bank)
    in register_again_2.erl line 20
   6: P.3: true = erlang:register(bank, P.3)
    in register_again_2.erl line 21
   7: P.1: money = bank ! money
    in register_again_2.erl line 11
   8: Message (money) from P.1 reaches P.3
   9: P.1: exits normally
  10: P.3: receives message (money)
    in register_again_2.erl line 22
  11: P.3: robber_got_money = P.2 ! robber_got_money
    in register_again_2.erl line 23
  12: Message (robber_got_money) from P.3 reaches P.2
  13: P.2: receives message (robber_got_money)
    in register_again_2.erl line 14
  14: P.2: exits normally
  15: P.3: exits normally
################################################################################
Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P in register_again_2.erl line 28
    P.2 in register_again_2.erl line 14
--------------------------------------------------------------------------------
Interleaving info:
   1: P: true = erlang:register(bank, P)
    in register_again_2.erl line 10
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<register_again_2.0.66250279>,[]])
    in erlang.erl line 2188
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<register_again_2.1.66250279>,[]])
    in erlang.erl line 2188
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<register_again_2.2.66250279>,[]])
    in erlang.erl line 2188
   5: P.3: true = erlang:unregister(bank)
    in register_again_2.erl line 20
   6: P.3: true = erlang:register(bank, P.3)
    in register_again_2.erl line 21
   7: P.1: money = bank ! money
    in register_again_2.erl line 11
   8: P.1: exits normally
   9: P.3: receive timeout expired after 0 ms
    in register_again_2.erl line 22
  10: Message (money) from P.1 reaches P.3
  11: P.3: exits normally
################################################################################
Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P in register_again_2.erl line 28
    P.2 in register_again_2.erl line 14
--------------------------------------------------------------------------------
Interleaving info:
   1: P: true = erlang:register(bank, P)
    in register_again_2.erl line 10
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<register_again_2.0.66250279>,[]])
    in erlang.erl line 2188
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<register_again_2.1.66250279>,[]])
    in erlang.erl line 2188
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<register_again_2.2.66250279>,[]])
    in erlang.erl line 2188
   5: P.3: true = erlang:unregister(bank)
    in register_again_2.erl line 20
   6: P.3: true = erlang:register(bank, P.3)
    in register_again_2.erl line 21
   7: P.3: receive timeout expired after 0 ms
    in register_again_2.erl line 22
   8: P.3: exits normally
   9: P.1: Exception raised by: bank ! money
    in register_again_2.erl line 11
  10: P.1: exits normally
################################################################################
Done! (Exit status: ok)
  Summary: 5 errors, 6/6 interleavings explored
